---
# 语言: None, Cpp, Java, JavaScript, ObjC, Proto, TableGen, TextProto
Language:        Cpp
# 基础风格： LLVM|Google|Chromium|Mozilla|WebKit|Microsoft|GNU
BasedOnStyle:  Google
# 访问说明符(public、private等)的偏移(缩进或者对齐)
AccessModifierOffset: -2
# 开括号(开圆括号、开尖括号、开方括号)后的对齐: Align, DontAlign, AlwaysBreak(总是在开括号后换行)
AlignAfterOpenBracket: Align
# 连续宏定义对齐
AlignConsecutiveMacros: false
# 对齐连续赋值
AlignConsecutiveAssignments: false
# 位段对齐
AlignConsecutiveBitFields: false
# 连续声明对齐
AlignConsecutiveDeclarations: false
# 对齐分割语法行的斜杠符\
AlignEscapedNewlines: Left
# 竖直对齐表达式的操作数
AlignOperands:   Align
# 对齐尾部注释
AlignTrailingComments: false
# 允许参数在下一行上
AllowAllArgumentsOnNextLine: true
# 已弃用
AllowAllConstructorInitializersOnNextLine: true
# 允许声明的参数在下一行上
AllowAllParametersOfDeclarationOnNextLine: true
# 允许短枚举在单行上
AllowShortEnumsOnASingleLine: false
# 允许短语法块在单行上
AllowShortBlocksOnASingleLine: Never
# 允许短的case标签放在同一行
AllowShortCaseLabelsOnASingleLine: false
# 允许短的函数放在同一行
AllowShortFunctionsOnASingleLine: None
# 允许短匿Lambda函数在单行上
AllowShortLambdasOnASingleLine: All
# 允许if块在单行上
AllowShortIfStatementsOnASingleLine: Never
# 允许合并短循环到单行上
AllowShortLoopsOnASingleLine: false
# 函数定义返回类型换行风格
AlwaysBreakAfterDefinitionReturnType: None
# 函数声明的返回类型换行风格
AlwaysBreakAfterReturnType: None
# 多行字符串断行
AlwaysBreakBeforeMultilineStrings: false
# 模板声明断行
# AlwaysBreakTemplateDeclarations: MultiLine
# 长实参分行
BinPackArguments: false
# 长声明形参分行
BinPackParameters: false
# 大括号换行风格
BraceWrapping:
  # case后面的大括号换行
  AfterCaseLabel:  true
  # 类定义换行
  AfterClass:      true
  # 语句if/for/while/switch/...的换行风格控制
  AfterControlStatement: Always
  # 枚举定义后大括号换行
  AfterEnum:       true
  # 函数定义之后大括号换行
  AfterFunction:   true
  # 命名空间后换行
  AfterNamespace:  true
  AfterObjCDeclaration: true
  # 结构体定义之后换行
  AfterStruct:     true
  # 联合定义之后换行
  AfterUnion:      true
  # extern声明之后换行
  AfterExternBlock: true
  # 在catch之前换行
  BeforeCatch:     true
  # 在else之前换行
  BeforeElse:      true
  # 在Lambda表达式块之前换行
  BeforeLambdaBody: true
  # 在while之前换行
  BeforeWhile:     true
  # 对换行的大括号缩进
  IndentBraces:    false
  # 空函数体是否可以放在单行上
  SplitEmptyFunction: true
  # 空记录(例如类、结构或联合)主体是否可以放在单行上
  SplitEmptyRecord: true
  # 空的namespace主体是否可以放在单行上
  SplitEmptyNamespace: true
# 二元操作符断行
BreakBeforeBinaryOperators: None
# 大括号断行风格, Custom即可
BreakBeforeBraces: Custom

# 继承列表括号前换行, false即可
BreakBeforeInheritanceComma: false
# 继承链断行风格
# BreakInheritanceList: BeforeColon
# 三元操作符断行规则
BreakBeforeTernaryOperators: false
# 是否在构造函数初始化列表的,前换行
# BreakConstructorInitializersBeforeComma: false
# 构造初始化断行风格
BreakConstructorInitializers: BeforeComma
# 字符串常量断行
BreakStringLiterals: true
# 列数限制
ColumnLimit:   120
# 注释表示
CommentPragmas:  '^ IWYU pragma:'
# 紧凑命名空间
CompactNamespaces: false
# 构造函数初始化列表缩进
ConstructorInitializerIndentWidth: 2
# 函数调用续行对齐
ContinuationIndentWidth: 2
# 大括号列表风格
Cpp11BracedListStyle: true
# 提取行结束符并标准化
DeriveLineEnding: true
# 提取指针对齐
DerivePointerAlignment: false
# 禁用格式化
DisableFormat:   false
# 实验性功能，自动检测同行并进行操作
ExperimentalAutoDetectBinPacking: false
# 是否强制在namespace结尾增加 // namespace xxx
FixNamespaceComments: false
# Macro宏
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
# include块风格
IncludeBlocks:   Preserve
# include种类
IncludeCategories:
  - Regex:           '^"(llvm|llvm-c|clang|clang-c)/'
    Priority:        2
    SortPriority:    0
  - Regex:           '^(<|"(gtest|gmock|isl|json)/)'
    Priority:        3
    SortPriority:    0
  - Regex:           '.*'
    Priority:        1
    SortPriority:    0
# 判断主包含的正则表达式
IncludeIsMainRegex: '(_test)?$'
# 判断源文件的正则表达式
IncludeIsMainSourceRegex: ''
# case label标签缩进
IndentCaseLabels: false
# case块缩进
IndentCaseBlocks: false
# 缩进Goto跳转符号
IndentGotoLabels: true
# 预处理指令缩进
IndentPPDirectives: AfterHash
# Extern扩展块缩进
IndentExternBlock: AfterExternBlock
# 缩进宽度
IndentWidth:     2
# 函数名缩进
IndentWrappedFunctionNames: false
# 掺入尾部冒号
InsertTrailingCommas: None
# 是否在语法块开始留空行
KeepEmptyLinesAtTheStartOfBlocks: false
# 宏开始的正则，不使用
MacroBlockBegin: ''
# 宏结束的正则，不使用
MacroBlockEnd:   ''
# 最大持续空行
MaxEmptyLinesToKeep: 1
# 命名空间缩进
NamespaceIndentation: All
# 指针对齐
PointerAlignment: Left
# 重排版注释
ReflowComments: true
# 对inclue排序
SortIncludes: false
# 排序using语句
SortUsingDeclarations: false
# 是否在c风格的类型转换之后插入空白符
SpaceAfterCStyleCast: false
# 是否在逻辑!操作符后面插入空白符
SpaceAfterLogicalNot: false
# 是否在模板关键字template之后插入空格
SpaceAfterTemplateKeyword: false
# 是否在赋值操作符前空格
SpaceBeforeAssignmentOperators: true
# 是否在c++11统一初始化列表的大括号前加空格
SpaceBeforeCpp11BracedList: false
# 是否在构造函数初始化式冒号之前加空格
SpaceBeforeCtorInitializerColon: true
# 是否在继承冒号前加空格
SpaceBeforeInheritanceColon: true
# 圆括号前空格风格， ControlStatement只在控制语句关键字(for/if/while…)之后的开括号前加空格
SpaceBeforeParens: ControlStatements
# 基于范围的for循环冒号前是否加空格
SpaceBeforeRangeBasedForLoopColon: true
# 是否在空block中加空格
SpaceInEmptyBlock: false
# 圆括号之间是否加空格
SpaceInEmptyParentheses: false
# 尾部注释之前的空格
SpacesBeforeTrailingComments: 1
# 角括号<和>之间是否空格
SpacesInAngles:  false
# 条件表达式中是否加空白
SpacesInConditionalStatement: false
# 容器中是否加空格
SpacesInContainerLiterals: true
# cast转换里是否加空格
SpacesInCStyleCastParentheses: false
# 圆括号中是否加空格
SpacesInParentheses: false
# 方括号中是否加空格
SpacesInSquareBrackets: false
# 方括号前是否加空格
SpaceBeforeSquareBrackets: false
# c++标准
Standard:        Latest
StatementMacros:
  - Q_UNUSED
  - QT_REQUIRE_VERSION
# Tab宽度
TabWidth:        2
# 是否使用CRLF
UseCRLF:         false
# 是否使用Tab
UseTab:          Never
# 空格敏感宏列表
WhitespaceSensitiveMacros:
  - STRINGIZE
  - PP_STRINGIZE
  - BOOST_PP_STRINGIZE
...
